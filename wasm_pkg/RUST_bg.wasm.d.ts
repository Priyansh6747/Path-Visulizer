/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const greet: () => void;
export const create_cell_state_buffer: (a: number) => any;
export const temp: () => void;
export const modify_from_rust: (a: number, b: number) => number;
export const get_buffer_ref: () => any;
export const get_buffer_copy: () => any;
export const show_buffer: () => void;
export const reset_non_wall_nodes: () => void;
export const clear_shared_buffer: () => number;
export const gen_maze: (a: number, b: number, c: number) => void;
export const handle_dijkstra: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_a_star: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_greedy_bfs: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_bfs: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_dfs: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_bellman_ford: (a: number, b: number, c: number, d: number) => [number, number];
export const handle_bi_swarn: (a: number, b: number, c: number, d: number) => [number, number];
export const benchmark_dijkstra: (a: number, b: number, c: number, d: number) => number;
export const benchmark_a_star: (a: number, b: number, c: number, d: number) => number;
export const bfs: (a: number, b: number, c: number, d: number) => number;
export const dfs: (a: number, b: number, c: number, d: number) => number;
export const bellman_ford: (a: number, b: number, c: number, d: number) => number;
export const bi_swarn: (a: number, b: number, c: number, d: number) => number;
export const update_grid_for_algo: (a: number, b: number, c: number, d: number, e: number) => void;
export const calculate_maze_algorithm_cost: (a: number, b: number, c: number, d: number) => number;
export const create_shared_buffer: (a: number) => any;
export const __wbindgen_export_0: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_start: () => void;
